---

name: Tests on Windows

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pyenv
        shell: bash
        run: |
          python3 -m pip install pyenv-win --target $HOME\\.pyenv

      - name: Update system pip
        shell: bash
        run: |
          python3 -m pip install pip>=23 --upgrade

      - name: Install venvstarter in venv
        shell: bash
        run: |
          # TODO: Make it so venvstarter has option to ensure pip before checking deps
          python3 -c "__import__('venv').create(str(__import__('pathlib').Path('tools', '.python').resolve()), with_pip=False)"
          tools/.python/Scripts/python.exe -m ensurepip
          tools/.python/Scripts/python.exe -m pip install pip>=23 --upgrade
          VENVSTARTER_ONLY_MAKE_VENV=1 ./test.sh

      - name: Restore pyenv cache cache
        id: python_cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-python-3.7.9_3.8.10_3.9.13_3.10.5_3.11.0b4
          path: |
            ~/.pyenv
          restore-keys:
            ${{ runner.os }}-python-

      - name: pyenv on PATH
        shell: bash
        run: |
          echo "PYENV=$USERPROFILE\.pyenv\pyenv-win\\" >> $GITHUB_ENV
          echo "PYENV_HOME=$USERPROFILE\.pyenv\pyenv-win\\" >> $GITHUB_ENV
          echo "$USERPROFILE\.pyenv\pyenv-win\\bin\\" >> $GITHUB_PATH

      - name: Available pyenv versions
        shell: bash
        run: |
          pyenv install --list

      - name: Install python versions
        if: steps.python_cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          set -e

          pyenv --version

          pyenv install 3.7.9
          pyenv install 3.8.10
          pyenv install 3.9.13
          pyenv install 3.10.5
          pyenv install 3.11.0b4

          pyenv rehash

      - name: Save pyenv cache
        id: save_python_cache
        uses: actions/cache/save@v3
        with:
          key: ${{ steps.python_cache.outputs.cache-primary-key }}
          if: always()
          path: |
            ~/.pyenv

      - name: Find python versions
        shell: bash
        run: |
          set -ex

          ROOT=~/.pyenv
          ls $ROOT
          pyenv whence python
          V37=$(pyenv whence python3.7)
          V38=$(pyenv whence python3.8)
          V39=$(pyenv whence python3.9)
          V310=$(pyenv whence python3.10)
          V311="3.11.0b4"

          cat <<EOF > pythons.json
          {
            "python3.7": "~/.pyenv/pyenv-win/versions/$V37/python.exe",
            "python3.8": "~/.pyenv/pyenv-win/versions/$V38/python.exe",
            "python3.9": "~/.pyenv/pyenv-win/versions/$V39/python.exe",
            "python3.10": "~/.pyenv/pyenv-win/versions/$V310/python.exe",
            "python3.11": "~/.pyenv/pyenv-win/versions/$V311/python.exe"
          }
          EOF

      - name: Found pythons
        shell: bash
        run: |
          cat pythons.json

      - name: Install venvstarter in system
        shell: bash
        run: |
          python3 -m pip install -e '.[tests]'

      - name: Run the tests
        shell: bash
        run: |
          ./test.sh
