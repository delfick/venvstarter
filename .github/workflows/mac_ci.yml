---

name: Tests on MacOS

on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Fix permissions for /opt so cache works
        shell: bash
        run: |
          sudo chmod -R a+rwx /opt

      - name: Get pyenv
        uses: gabrielfalcao/pyenv-action@v16

      - name: Available pyenv versions
        shell: bash
        run: |
          pyenv install --list

      - name: Update system pip
        run: |
          python3 -m pip install pip>=23 --upgrade

      - name: Install pip into project venv
        run: |
          VENVSTARTER_ONLY_MAKE_VENV=1 VENV_STARTER_CHECK_DEPS=0 ./test.sh
          ./tools/.python/bin/python -m pip install pip>=23 --upgrade

      - name: Install venvstarter in venv
        shell: bash
        run: |
          VENVSTARTER_ONLY_MAKE_VENV=1 ./test.sh

      - name: Install venvstarter in system
        shell: bash
        run: |
          python3 -m pip install -e '.[tests]'

      - name: Cache Python
        id: python_cache
        uses: actions/cache@v2
        with:
          key: python3.7.17_3.8.17_3.9.17_3.10.12_3.11.4
          path: |
            /opt/hostedtoolcache/pyenv_root
            ~/hostedtoolcache/pyenv_root

      - name: Install python versions
        if: steps.python_cache.outputs.cache-hit != 'true'
        run: |
          set -e

          pyenv --version

          unset CPPFLAG
          unset LDFLAGS
          unset CFLAGS

          for version in 3.7.17 3.8.17 3.9.17 3.10.12 3.11.4; do
            pyenv install $version
          done

          pyenv rehash

      - name: Find python versions
        run: |
          set -e

          pyenv versions
          V37=$(pyenv whence python3.7)
          V38=$(pyenv whence python3.8)
          V39=$(pyenv whence python3.9)
          V310=$(pyenv whence python3.10)
          V311=$(pyenv whence python3.11)

          ROOT=$(pyenv root)

          cat <<eof > pythons.json
          {
            "python3.7": "$ROOT/versions/$V37/bin/python",
            "python3.8": "$ROOT/versions/$V38/bin/python",
            "python3.9": "$ROOT/versions/$V39/bin/python",
            "python3.10": "$ROOT/versions/$V310/bin/python",
            "python3.11": "$ROOT/versions/$V311/bin/python"
          }
          eof

      - name: found pythons
        run: |
          cat pythons.json

      - name: run the tests
        run: |
          ./test.sh
